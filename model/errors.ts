/**
 * SKUs API
 * A stock keeping unit (SKU) represents a specific product variation.   <a name=\"sku-object\"></a>     # The SKU object  The SKU object provides product information.  <table> <tr>     <td><b>Attributes</b></td>     <td><b>Description</b></td> </tr> <tr>     <td><b>createdTime</b>     <br>     datetime</td>     <td>The time when the SKU was created.</td> </tr>     <tr>     <td><b>id</b>     <br>     string</td>     <td>Unique identifier of a SKU.</td> </tr> <tr>     <td><b>eccn</b>     <br>     string</td>     <td>The Export Control Classification Number.</td> </tr>      <tr>     <td><b>taxCode</b>     <br>     string</td>     <td>The tax code.</td> </tr>    <tr>     <td><b>name</b>     <br>     string</td>     <td>The product\'s name.</td> </tr>    <tr>     <td><b>countryOfOrigin</b>     string<br>     </td>     <td>Two-letter country code.</td> </tr> <tr>     <td><b>weight</b>     <br>     number</td>     <td>The weight of the SKU in the unit system specified with weightUnit</td> </tr>    <tr>     <td><b>weightUnit</b>     <br>     string</td>     <td>The unit of measurement that applies to the SKU weight. If you do not specify a value for weightUnit, then the default unit of measurement is applied.</td> </tr>   <tr>     <td><b>liveMode</b>     <br>     boolean</td>     <td>Has the value is true of the object exists in live mode or the value false if the object exists in test mode.</td> </tr>   </table>  ## SKU object example     {       \"createdTime\": \"2018-04-25T20:36:00Z\",       \"id\": \"sku_5823594809\",       \"eccn\": \"EAR99\",       \"taxCode\": \"4323.310_A\",       \"name\": \"Athena Womens Running Shoes\",       \"countryOfOrigin\": \"US\",       \"weight\": 20.5,       \"weightUnit\": \"oz\",       \"liveMode\": false     }     
 *
 * The version of the OpenAPI document: 1.0.14
 * Contact: aknights@digitalriver.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from '../api';

export class Errors {
    'type'?: Errors.TypeEnum;
    'errors'?: Array<Error>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "type",
            "baseName": "type",
            "type": "Errors.TypeEnum"
        },
        {
            "name": "errors",
            "baseName": "errors",
            "type": "Array<Error>"
        }    ];

    static getAttributeTypeMap() {
        return Errors.attributeTypeMap;
    }
}

export namespace Errors {
    export enum TypeEnum {
        BadRequest = <any> 'bad_request',
        NotFound = <any> 'not_found',
        RequestTimeout = <any> 'request_timeout',
        Unauthorized = <any> 'unauthorized',
        Conflict = <any> 'conflict',
        InternalServerError = <any> 'internal_server_error',
        TooManyRequests = <any> 'too_many_requests',
        MethodNotAllowed = <any> 'method_not_allowed',
        NotAcceptable = <any> 'not_acceptable',
        Forbidden = <any> 'forbidden',
        BadGateway = <any> 'bad_gateway',
        ServiceUnavailable = <any> 'service_unavailable',
        GatewayTimeout = <any> 'gateway_timeout'
    }
}
